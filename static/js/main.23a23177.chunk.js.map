{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","hours","stawka","workdays","satsun","hollydays","illnessworkdays","illnessweekenddays","avaragehours","avaragemoney","add","isConfirmed","temp","wiatr","stan","cisnienie","clouds","visibility","icon","time","city","cityOk","country","handleChangeGodziny","e","setState","target","value","handleChangeStawka","handleChangeWorkdays","length","handleChangeSatsun","handleChangeUrlop","handleChangeCh1","handleChangeCh2","handleChangeSrGodz","handleChangeSrWyp","handleChangeAdd","handleChangeConfirm","handleChangeCity","fetch","this","then","response","json","dane","main","wind","speed","weather","description","pressure","all","Date","dt","toLocaleTimeString","prevProps","prevState","name","sys","nadgodz","wyl","obl","Math","round","toString","arr","el","push","k","Wynik","className","style","color","fontSize","letterSpacing","data","year","getFullYear","miesiac","getMonth","day","getDate","id","type","onChange","placeholder","checked","width","fontWeight","src","alt","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23a23177.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nclass App extends React.Component\r\n       {\r\n         state = {\r\n            hours : 0,\r\n            stawka : 0,\r\n            workdays:21,\r\n            satsun:0,\r\n            hollydays:0,\r\n            illnessworkdays:0,\r\n            illnessweekenddays:0,\r\n            avaragehours:168,\r\n            avaragemoney:4500,\r\n            add:0,\r\n            isConfirmed :false,\r\n            temp :\"brak danych\",\r\n            wiatr:\"brak danych\",\r\n            stan:\"brak danych\",\r\n            cisnienie:\"brak danych\",\r\n            clouds:\"brak danych\",\r\n            visibility:\"brak danych\",\r\n            icon:\"\",\r\n            time:\"brak danych\",\r\n            city:\"Warszawa\",\r\n            cityOk:\"Warszawa\",\r\n            country:\"PL\",\r\n            }     \r\n            \r\n    componentDidMount(){\r\n     fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=metric&lang=pl&appid=04a91b73b71a422b152e409612f46049`)\r\n      .then(response=>response.json())\r\n       .then(dane=>this.setState({temp:dane.main.temp, wiatr:dane.wind.speed, stan:dane.weather[0].description, cisnienie:dane.main.pressure, visibility:dane.visibility, clouds:dane.clouds.all, icon:dane.weather[0].icon, time:new Date(dane.dt*1000).toLocaleTimeString()})\r\n       )\r\n    }\r\n    \r\n    componentDidUpdate(prevProps,prevState){\r\n     if(prevState.city !== this.state.city) {fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=metric&lang=pl&appid=04a91b73b71a422b152e409612f46049`)\r\n      .then(response=>response.json())\r\n       .then(dane=>this.setState({temp:dane.main.temp, wiatr:dane.wind.speed, stan:dane.weather[0].description, cisnienie:dane.main.pressure,\r\n    visibility:dane.visibility, clouds:dane.clouds.all, icon:dane.weather[0].icon, time:new Date(dane.dt*1000).toLocaleTimeString(), cityOk:dane.name, country:dane.sys.country})\r\n       )\r\n     }\r\n    }\r\n                       handleChangeGodziny=(e)=>{this.setState({hours:e.target.value})}  \r\n                       \r\n    handleChangeStawka=(e)=>{this.setState({stawka:e.target.value})}\r\n    \r\n    handleChangeWorkdays=(e)=>{if(e.target.value.length>0){this.setState ({workdays:e.target.value})}else{this.setState({workdays:21})}}\r\n    \r\n    handleChangeSatsun=(e)=>{this.setState ({satsun:e.target.value})}\r\n    \r\n    handleChangeUrlop =(e)=>{this.setState ({hollydays:e.target.value})}\r\n    \r\n    handleChangeCh1 =(e)=>{this.setState ({illnessworkdays:e.target.value})}\r\n    \r\n    handleChangeCh2 =(e)=>{this.setState ({illnessweekenddays:e.target.value})}\r\n    \r\n    handleChangeSrGodz =(e)=>{if(e.target.value.length>0){this.setState({avaragehours:e.target.value})}else{this.setState({avaragehours:168})}}\r\n    \r\n    handleChangeSrWyp =(e)=>{if(e.target.value.length>0){this.setState ({avaragemoney:e.target.value})}else{this.setState({avaragemoney:4500})}}\r\n    \r\n    handleChangeAdd=(e)=>{this.setState({add:e.target.value})}\r\n    \r\n    handleChangeConfirm =()=>{this.setState({isConfirmed :!this.state.isConfirmed})}\r\n    \r\n    handleChangeCity=(e)=>{if(e.target.value.length>2){this.setState({city:e.target.value})}else{this.setState({city:\"Warszawa\"})}}\r\n    \r\n    \r\n                            \r\n                    render() {\r\n          const {hours, stawka, workdays, satsun, hollydays, illnessworkdays, illnessweekenddays, avaragehours, avaragemoney, add }=this.state;          \r\n                    \r\n                  var workd =workdays-hollydays-illnessworkdays;  \r\n     var nadgodz=hours-workd*8;\r\n     if(nadgodz<0){nadgodz=0};\r\n     \r\n     \r\n     \r\n     \r\n                    const wyliczenie =()=>{return (hours * stawka+nadgodz*stawka*0.5 + satsun *stawka*0.5+hollydays *8*avaragemoney/avaragehours/0.7+illnessworkdays*avaragemoney/30/0.7*0.8 + illnessweekenddays*avaragemoney/30/0.7*0.8+add*1)*0.691439;\r\n     \r\n             }\r\n    let wyl=wyliczenie();\r\n    if(wyl<0){wyl=0};\r\n    if(this.state.isConfirmed) {wyl=wyl-0.1928*wyl};\r\n    wyl=Math.round(wyl);\r\n    var obl=wyl.toString();\r\n    var arr=[];\r\n    for(const el of obl) {\r\n    arr.push(el)};\r\n    \r\n    for(var k=4; k<=arr.length; k+=3)\r\n       {arr[arr.length-k]+=\" \" }\r\n                \r\n                    const Wynik = ()=> {return(<h3 className=\"wynik\">Twoja wypłata powinna wynieść:<br/><span style={{color:'#FD5B35', fontSize:'1.5em',letterSpacing:'3px'}}>{arr}</span> PLN</h3>)}\r\n                    \r\n    const data=new Date();\r\n    const year=data.getFullYear();\r\n    let miesiac=data.getMonth();\r\n    const day=data.getDate();\r\n    switch(miesiac){\r\n        \r\n     \r\n        case 1 : miesiac=\"luty\";\r\n     break;\r\n     \r\n     case 2 : miesiac=\"marzec\";\r\n     break;\r\n     \r\n     case 3 : miesiac=\"kwiecień\";\r\n     break;\r\n     \r\n     case 4 : miesiac=\"maj\";\r\n     break;\r\n     \r\n     case 5 : miesiac=\"czerwiec\";\r\n     break;\r\n     \r\n     case 6 : miesiac=\"lipiec\";\r\n     break;\r\n     \r\n     case 7 : miesiac=\"sierpień\";\r\n     break;\r\n     \r\n     case 8 : miesiac=\"wrzesień\";\r\n     break;\r\n     \r\n     case 9 : miesiac=\"październik\";\r\n     break;\r\n     \r\n     case 10 : miesiac=\"listopad\";\r\n     break;\r\n     \r\n     case 11 : miesiac=\"grudzień\";\r\n     break;\r\n\r\n     default : miesiac=\"styczeń\";\r\n     break;\r\n    }\r\n    \r\n        \r\n                     return <div>\r\n                      \r\n                     \r\n                <Wynik/><br/><br/><br/>\r\n                     <div id=\"tytul\"><h2>Kalkulator Wynagrodzenia</h2><p>NETTO<br/>(z uwzg. standardowego uczestnictwa w PPK)</p></div>\r\n                     <ol>\r\n                         \r\n                     <label><li>Podaj łączną liczbę przepracowanych godzin w danym miesiącu<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeGodziny}/></li> <br/></label>\r\n                         \r\n                     <label><li>\r\n     Podaj twoją stawkę godzinową<br/><input className=\"input\" type=\"number\" onChange ={this.handleChangeStawka}/></li><br/></label>\r\n     \r\n      <label><li>Podaj liczbę dni roboczych danego miesiąca<br/><input className=\"input\" type=\"number\" placeholder=\"wst. 21\" onChange={this.handleChangeWorkdays}/></li><br/></label>   \r\n      \r\n        <label><li>Podaj łączną liczbę godzin przepracowanych w soboty, niedziele i święta<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeSatsun}/></li><br/></label>\r\n      \r\n     <label><li>Podaj ilość dni przebytych na urlopie<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeUrlop}/></li><br/></label>\r\n     \r\n     <label><li>Podaj ilość dni powszednich przebytych na zwolnieniu lekarskim<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeCh1}/></li><br/>\r\n    </label>\r\n     \r\n     <label><li>Podaj ilość dni wolnych od pracy a przebytych na zwolnieniu lekarskim<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeCh2}/></li><br/></label>\r\n     \r\n     <label><li>Podaj liczbę godzin uśrednioną z trzech ostatnich miesięcy<br/><input className=\"input\" type=\"number\" placeholder=\"wst. 168\" onChange={this.handleChangeSrGodz}/></li><br/></label>\r\n     \r\n      <label><li>Podaj kwotę wypłaty uśrednioną z trzech ostatnich miesięcy<br/><input className=\"input\" type=\"number\" placeholder=\"wst. 4500\" onChange={this.handleChangeSrWyp}/></li><br/></label>\r\n      \r\n        <label><li>Podaj kwotę brutto ewentualnych dodatków typu: premia, mieszkaniówka<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeAdd}/></li><br/></label>\r\n    \r\n    \r\n       <label><input type='checkbox' id=\"box\" onChange ={this.handleChangeConfirm} checked={this.state.isConfirmed}/>zaznacz jeśli \"wpadłeś\" w drugi próg podatkowy</label><br/> <br/><hr/>  \r\n             \r\n     <label>Pogoda w Twoim mieście: <input className=\"input\" type=\"text\" placeholder=\"Warszawa\" style={{width:\"10em\"}} onChange={this.handleChangeCity}></input></label>\r\n      \r\n      </ol>\r\n      \r\n     \r\n             \r\n         <div id=\"footer\"><br/>Aktualna pogoda dla miasta <span style={{color:\"#0000FF\"}}>{this.state.cityOk} - {this.state.country}</span> (<span style={{color:\"black\", fontWeight:\"100\"}}>{this.state.time}</span>):<br/> 🌡️temp.: <span>{this.state.temp} &#176;C</span> 💨wiatr: <span>{this.state.wiatr} m/s</span><br/>⛱️stan: <span>{this.state.stan}</span> ⏲️ciśnienie: <span>{this.state.cisnienie} hPa</span><br/>👁️widoczność: <span>{this.state.visibility} m</span> ⛅zachmurzenie:  <span>{this.state.clouds} %</span><br/><img src={`https://openweathermap.org/img/wn/${this.state.icon}@2x.png`} alt=\"icon\"/><br/>{day} {miesiac} {year} - &copy; Grzegorz Dychała</div>  \r\n    </div>\r\n                  \r\n                     \r\n                        }\r\n       }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}