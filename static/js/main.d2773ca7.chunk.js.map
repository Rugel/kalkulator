{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","hours","stawka","workdays","satsun","hollydays","illnessworkdays","illnessweekenddays","avaragehours","avaragemoney","isConfirmed","handleChangeGodziny","e","setState","target","value","handleChangeStawka","handleChangeWorkdays","handleChangeSatsun","handleChangeUrlop","handleChangeCh1","handleChangeCh2","handleChangeSrGodz","handleChangeSrWyp","handleChangeConfirm","workd","this","nadgodz","wyl","obl","Math","round","toString","arr","el","push","k","length","Wynik","className","style","color","fontSize","letterSpacing","data","Date","year","getFullYear","miesiac","getMonth","day","getDate","id","type","onChange","checked","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2773ca7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component\n       {\n         state = {\n            hours : 0,\n            stawka : 0,\n            workdays:21,\n            satsun:0,\n            hollydays:0,\n            illnessworkdays:0,\n            illnessweekenddays:0,\n            avaragehours:168,\n            avaragemoney:4500,\n            isConfirmed :false,          }\n                       handleChangeGodziny=(e)=>{this.setState({hours:e.target.value})}  \n                       \n    handleChangeStawka=(e)=>{this.setState({stawka:e.target.value})}\n    \n    handleChangeWorkdays=(e)=>{this.setState ({workdays:e.target.value})}\n    \n    handleChangeSatsun=(e)=>{this.setState ({satsun:e.target.value})}\n    \n    handleChangeUrlop =(e)=>{this.setState ({hollydays:e.target.value})}\n    \n    handleChangeCh1 =(e)=>{this.setState ({illnessworkdays:e.target.value})}\n    \n    handleChangeCh2 =(e)=>{this.setState ({illnessweekenddays:e.target.value})}\n    \n    handleChangeSrGodz =(e)=>{this.setState ({avaragehours:e.target.value})}\n    \n    handleChangeSrWyp =(e)=>{this.setState ({avaragemoney:e.target.value})}\n    \n    handleChangeConfirm =()=>{this.setState({isConfirmed :!this.state.isConfirmed})}\n    \n    \n                            \n                    render() {\n                  var workd =this.state.workdays-this.state.hollydays-this.state.illnessworkdays;  \n     var nadgodz=this.state.hours-workd*8;\n     if(nadgodz<0){nadgodz=0}\n     \n     const {hours, stawka, satsun, hollydays, illnessworkdays, illnessweekenddays, avaragehours, avaragemoney }=this.state;\n     \n     \n                    const wyliczenie =()=>{return (1200+hours * stawka+nadgodz*stawka*0.5 + satsun *stawka*0.5+hollydays *8*avaragemoney/avaragehours/0.7-40*hollydays+illnessworkdays*avaragemoney/30/0.7*0.8-40*illnessworkdays + illnessweekenddays*avaragemoney/30/0.7*0.8-40*illnessweekenddays )*0.98*0.709639;\n     \n             }\n    let wyl=wyliczenie();\n    if(wyl<0) {wyl=0};\n   if(this.state.isConfirmed) {wyl=wyl-0.1928*wyl};\n    wyl=Math.round(wyl);\n    var obl=wyl.toString();\n    var arr=[];\n    for(const el of obl) {\n    arr.push(el)};\n    \n    for(var k=4; k<=arr.length; k+=3)\n       {arr[arr.length-k]+=\" \" }\n                \n                    const Wynik = ()=> {return(<h3 className=\"wynik\">Twoja wypłata powinna wynieść:<br/><span style={{color:'#FD3C37', fontSize:'1.5em',letterSpacing:'3px'}}>{arr}</span> PLN</h3>)}\n                    \n    const data=new Date();\n    const year=data.getFullYear();\n    let miesiac=data.getMonth();\n    const day=data.getDate();\n    switch(miesiac){\n        default : miesiac=\"styczeń\";\n     break;\n     \n        case 1 : miesiac=\"luty\";\n     break;\n     \n     case 2 : miesiac=\"marzec\";\n     break;\n     \n     case 3 : miesiac=\"kwiecień\";\n     break;\n     \n     case 4 : miesiac=\"maj\";\n     break;\n     \n     case 5 : miesiac=\"czerwiec\";\n     break;\n     \n     case 6 : miesiac=\"lipiec\";\n     break;\n     \n     case 7 : miesiac=\"sierpień\";\n     break;\n     \n     case 8 : miesiac=\"wrzesień\";\n     break;\n     \n     case 9 : miesiac=\"październik\";\n     break;\n     \n     case 10 : miesiac=\"listopad\";\n     break;\n     \n     case 11 : miesiac=\"grudzień\";\n     break;\n    }\n    \n        \n                     return <div>\n                      \n                     \n                <Wynik/><br/><br/><br/>\n                     <div id=\"tytul\"><h2>Kalkulator Wynagrodzenia</h2><p>NA ŁAPĘ<br/>(z dodatkiem mieszkaniowym 1200 zł brutto oraz 2% wpłatą na PPK)</p></div>\n                     <ol>\n                         \n                     <label><li>Podaj łączną liczbę przepracowanych godzin w danym miesiącu<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeGodziny}/></li> <br/></label>\n                         \n                     <label><li>\n     Podaj twoją stawkę godzinową<br/><input className=\"input\" type=\"number\" onChange ={this.handleChangeStawka}/></li><br/></label>\n     \n      <label><li>Podaj liczbę dni roboczych danego miesiąca<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeWorkdays}/></li><br/></label>   \n      \n        <label><li>Podaj łączną liczbę godzin przepracowanych w soboty, niedziele i święta<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeSatsun}/></li><br/></label>\n      \n     <label><li>Podaj ilość dni przebytych na urlopie<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeUrlop}/></li><br/></label>\n     \n     <label><li>Podaj ilość dni powszednich przebytych na zwolnieniu lekarskim<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeCh1}/></li><br/>\n    </label>\n     \n     <label><li>Podaj ilość dni wolnych od pracy a przebytych na zwolnieniu lekarskim<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeCh2}/></li><br/></label>\n     \n     <label><li>Podaj liczbę godzin uśrednioną z trzech ostatnich miesięcy<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeSrGodz}/></li><br/></label>\n     \n      <label><li>Podaj kwotę wypłaty uśrednioną z trzech ostatnich miesięcy<br/><input className=\"input\" type=\"number\" onChange={this.handleChangeSrWyp}/></li><br/></label>\n    \n    \n       <label><input type='checkbox' id=\"box\" onChange ={this.handleChangeConfirm} checked={this.state.isConfirmed}/>zaznacz jeśli \"wpadłeś\" w drugi próg podatkowy</label><br/> <br/>        \n      \n      \n      </ol>\n             \n         <div id=\"footer\">{day} {miesiac} {year} - wyk. Grzegorz Dychała</div>  \n    </div>\n                  \n                     \n                        }\n       }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}